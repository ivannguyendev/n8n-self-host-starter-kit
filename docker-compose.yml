volumes:
  n8n_storage:
  postgres_data:

x-shared-env: &shared-env
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
  N8N_USER_MANAGEMENT_JWT_SECRET: ${N8N_USER_MANAGEMENT_JWT_SECRET}
  DB_TYPE: ${DB_TYPE:-postgresdb}
  DB_POSTGRESDB_HOST: ${DB_POSTGRESDB_HOST:-postgres}
  DB_POSTGRESDB_USER: ${DB_POSTGRESDB_USER:-}
  DB_POSTGRESDB_PASSWORD: ${DB_POSTGRESDB_PASSWORD:-}
  N8N_DIAGNOSTICS_ENABLED: ${N8N_DIAGNOSTICS_ENABLED:-false}
  N8N_PERSONALIZATION_ENABLED: ${N8N_PERSONALIZATION_ENABLED:-false}
  N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY:-}
  N8N_USER_MANAGEMENT_JWT_SECRET: ${N8N_USER_MANAGEMENT_JWT_SECRET:-}
  N8N_QUEUE_BULL_REDIS_HOST: ${N8N_QUEUE_BULL_REDIS_HOST:-redis}
  N8N_QUEUE_BULL_REDIS_PORT: ${N8N_QUEUE_BULL_REDIS_PORT:-6379}

x-n8n: &service-n8n
  image: n8nio/n8n:latest
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST
    - DB_POSTGRESDB_USER
    - DB_POSTGRESDB_PASSWORD
    - N8N_DIAGNOSTICS_ENABLED
    - N8N_PERSONALIZATION_ENABLED
    - N8N_ENCRYPTION_KEY
    - N8N_USER_MANAGEMENT_JWT_SECRET
    - N8N_QUEUE_BULL_REDIS_HOST
    - N8N_QUEUE_BULL_REDIS_PORT
  env_file:
    - .env

services:
  n8n-import:
    <<: *service-n8n
    hostname: n8n-import
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"
    volumes:
      - ./n8n/backup:/backup
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  n8n:
    <<: *service-n8n
    hostname: n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully

  n8n-worker:
    <<: *service-n8n
    hostname: n8n-worker
    container_name: n8n-worker
    restart: unless-stopped
    command:
      - worker
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      n8n:
        condition: service_started

  postgres:
    image: postgres:15-alpine
    hostname: postgres
    container_name: postgres
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      <<: *shared-env
      POSTGRES_DB: ${POSTGRES_DB:-n8n}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-root}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    hostname: redis
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
